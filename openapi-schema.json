{
    "openapi": "3.0.3",
    "info": {
        "title": "Spek & Boonen ERP API",
        "version": "1.0.0",
        "description": "\n        This is the API documentation for the Spek & Boonen ERP API.\n\n        Filter, search and order fields are available for all endpoints that return a list of objects.\n\n        To filter, search or order, append the following query parameters to the endpoint URL:\n        - `?field_name=<value>` to filter by a specific field\n        - `?search=<search_term>` to search for a specific term\n        - `?ordering=<field_name>` to order by a specific field\n\n        Internationlization is supported. To get responses in a specific language, append the language code to the endpoint URL:\n        - `/fr/api/...` for French\n        - `/nl/api/...` for Dutch\n        - `/api/...` for English (default)\n\n        Supported languages are English, Dutch and French.",
        "contact": [
            "oluwaseyifunmi@mafflle.com.ng",
            "goodnewsj62@gmail.com"
        ]
    },
    "paths": {
        "/api/": {
            "get": {
                "operationId": "health_check",
                "tags": [
                    "Health Check"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/auth/admin-exists/": {
            "get": {
                "operationId": "check_if_admin_exists",
                "tags": [
                    "User"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AdminExistsMessage"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/auth/forgot-password/": {
            "post": {
                "operationId": "request_password_reset_token",
                "description": "Requests a password reset token.",
                "summary": "Request password reset token",
                "tags": [
                    "Authentication"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Email"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Email"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Email"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/auth/groups/": {
            "get": {
                "operationId": "list_groups",
                "description": "Returns a list of all groups.",
                "summary": "List groups",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Groups"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedGroupList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "create_group",
                "description": "Creates a new group.",
                "summary": "Create group",
                "tags": [
                    "Groups"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Group"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Group"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Group"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Group"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/auth/groups/{id}/": {
            "get": {
                "operationId": "get_group",
                "description": "Returns the group's information.",
                "summary": "Get group information",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Groups"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Group"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "update_group",
                "description": "Updates the group's information.",
                "summary": "Update group information",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Groups"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Group"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Group"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Group"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Group"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "partially_update_group",
                "description": "Partially updates the group's information.",
                "summary": "Partially update group information",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Groups"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedGroup"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedGroup"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedGroup"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Group"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "delete_group",
                "description": "Deletes the group.",
                "summary": "Delete group",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Groups"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/auth/login/": {
            "post": {
                "operationId": "get_auth_tokens",
                "description": "Returns a pait of JWT tokens when valid credentials are provided.",
                "summary": "Get JWT tokens",
                "tags": [
                    "Authentication"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenObtainPair"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenObtainPair"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenObtainPair"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenObtainPairResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/auth/me/": {
            "get": {
                "operationId": "get_current_user",
                "description": "Returns the current user's information.",
                "summary": "Get current user information",
                "tags": [
                    "User"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Account"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/auth/me/permissions/": {
            "get": {
                "operationId": "get_user_permissions",
                "description": "Returns the current user's permissions.",
                "summary": "Get user permissions",
                "tags": [
                    "User"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MyPermissions"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/auth/permissions/": {
            "get": {
                "operationId": "list_permissions",
                "parameters": [
                    {
                        "in": "query",
                        "name": "codename",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Permissions"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedPermissionList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/auth/refresh/": {
            "post": {
                "operationId": "refresh_auth_tokens",
                "description": "Returns a new pair of JWT tokens when valid refresh token is provided.",
                "summary": "Refresh JWT tokens",
                "tags": [
                    "Authentication"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenRefresh"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenRefresh"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenRefresh"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenRefreshResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/auth/register/": {
            "post": {
                "operationId": "register_user",
                "description": "Register a new user.\n\nThis endpoint creates a new user in the database, it doesn't require authentication.",
                "tags": [
                    "User"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterAccount"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterAccount"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterAccount"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RegisterAccount"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/auth/reset-password/": {
            "post": {
                "operationId": "confirm_password_reset",
                "description": "Confirms a password reset.",
                "summary": "Confirm password reset",
                "tags": [
                    "Authentication"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PasswordToken"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PasswordToken"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PasswordToken"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/auth/reset-password/validate_token/": {
            "post": {
                "operationId": "validate_password_reset_token",
                "description": "Validates a password reset token.",
                "summary": "Validate password reset token",
                "tags": [
                    "Authentication"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResetToken"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ResetToken"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ResetToken"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Status"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/auth/setup-admin/": {
            "post": {
                "operationId": "setup_user",
                "tags": [
                    "User"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterAccount"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterAccount"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterAccount"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RegisterAccount"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/auth/staff_profile/{user_id}/": {
            "put": {
                "operationId": "update_staff_profile",
                "description": "Update staff profile by ID.\n\nOnly staff users with the `accounts.change_staffprofile` or `accounts.change_account` permission can access this view.",
                "summary": "Update staff profile",
                "parameters": [
                    {
                        "in": "path",
                        "name": "user_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Staff Profile"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StaffProfile"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/StaffProfile"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/StaffProfile"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StaffProfile"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "partially_update_staff_profile",
                "description": "Update staff profile by ID.\n\nOnly staff users with the `accounts.change_staffprofile` or `accounts.change_account` permission can access this view.",
                "summary": "Partially update staff profile",
                "parameters": [
                    {
                        "in": "path",
                        "name": "user_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Staff Profile"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedStaffProfile"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedStaffProfile"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedStaffProfile"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StaffProfile"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/auth/staff_profile/me/": {
            "get": {
                "operationId": "get_my_staff_profile",
                "description": "Returns the current user's staff profile.",
                "summary": "Get my staff profile",
                "tags": [
                    "Staff Profile"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        },
                        "description": ""
                    },
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StaffProfile"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "update_my_staff_profile",
                "description": "Updates the current user's staff profile.",
                "summary": "Update my staff profile",
                "tags": [
                    "Staff Profile"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StaffProfile"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/StaffProfile"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/StaffProfile"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StaffProfile"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "partially_update_my_staff_profile",
                "description": "Partially updates the current user's staff profile.",
                "summary": "Partially update my staff profile",
                "tags": [
                    "Staff Profile"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedStaffProfile"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedStaffProfile"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedStaffProfile"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StaffProfile"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/auth/staff_profile/me/create/": {
            "post": {
                "operationId": "create_staff_profile",
                "description": "Create a new staff profile for the current user.",
                "tags": [
                    "Staff Profile"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StaffProfile"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/StaffProfile"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/StaffProfile"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StaffProfile"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/auth/users/": {
            "get": {
                "operationId": "list_users",
                "description": "Returns a list of all users.\n\nOnly staff users with the `accounts.view_account` permission can access this view.",
                "parameters": [
                    {
                        "in": "query",
                        "name": "email",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "is_pro_user",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "is_staff",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "User"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedAccountList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/auth/users/{id}/": {
            "get": {
                "operationId": "get_user",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "User"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Account"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/auth/users/{id}/update/": {
            "put": {
                "operationId": "update_user",
                "description": "Updates the user's information.",
                "summary": "Update user information",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "User"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateAccount"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateAccount"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateAccount"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateAccount"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "partially_update_user",
                "description": "Partially updates the user's information.",
                "summary": "Partially update user information",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "User"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUpdateAccount"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUpdateAccount"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUpdateAccount"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateAccount"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/auth/users/change-password/": {
            "post": {
                "operationId": "change_password",
                "description": "Changes the current user's password.",
                "summary": "Change password",
                "tags": [
                    "User"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChangePassword"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ChangePassword"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ChangePassword"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ChangePassword"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/auth/users/invite/": {
            "post": {
                "operationId": "invite_staff",
                "description": "Creates a new user in the database, and sends an email with the user's credentials.",
                "summary": "Invite staff member",
                "tags": [
                    "User"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InviteStaff"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/InviteStaff"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/InviteStaff"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InviteStaff"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/auth/verify/": {
            "post": {
                "operationId": "verify_jwt_tokens",
                "description": "Returns a 200 OK response when valid a valid access or refresh token is provided. If the token is invalid, expired or blacklisted, a 401 Unauthorized response is returned.",
                "summary": "Verify JWT tokens",
                "tags": [
                    "Authentication"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenVerify"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenVerify"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenVerify"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/blog/": {
            "get": {
                "operationId": "list_post",
                "description": "List all Posts",
                "summary": "List all Posts",
                "parameters": [
                    {
                        "in": "query",
                        "name": "author",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "title",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Post"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedPostList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "create_post",
                "description": "Create a new Post",
                "summary": "Create a new Post",
                "tags": [
                    "Post"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Post"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Post"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Post"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Post"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/blog/{slug}/": {
            "get": {
                "operationId": "retrieve_post",
                "description": "Retrieve a Post",
                "summary": "Retrieve a Post",
                "parameters": [
                    {
                        "in": "path",
                        "name": "slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Post"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Post"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "update_post",
                "description": "Update a Post",
                "summary": "Update a Post",
                "parameters": [
                    {
                        "in": "path",
                        "name": "slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Post"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Post"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Post"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Post"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Post"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "api_blog_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Post"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPost"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPost"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPost"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Post"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "delete_post",
                "description": "Delete a Post",
                "summary": "Delete a Post",
                "parameters": [
                    {
                        "in": "path",
                        "name": "slug",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Post"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/hrm/leave-request/{id}/": {
            "get": {
                "operationId": "api_hrm_leave_request_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "HRM",
                    "Leave Request"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LeaveStatusEdit"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "update_leave_req2",
                "description": "Updates Leave Request",
                "summary": "Update Leave Request",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "HRM",
                    "Leave Request"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LeaveStatusEdit"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/LeaveStatusEdit"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/LeaveStatusEdit"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LeaveStatusEdit"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "update_leave_req",
                "description": "Updates Leave Request",
                "summary": "Update Leave Request",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "HRM",
                    "Leave Request"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedLeaveStatusEdit"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedLeaveStatusEdit"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedLeaveStatusEdit"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LeaveStatusEdit"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/hrm/leave-request/{id}/update-status/": {
            "put": {
                "operationId": "update_leave_status_2",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "HRM",
                    "Leave Request"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LeaveStatusEdit"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/LeaveStatusEdit"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/LeaveStatusEdit"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LeaveStatusEdit"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "update_leave_status",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "HRM",
                    "Leave Request"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedLeaveStatusEdit"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedLeaveStatusEdit"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedLeaveStatusEdit"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LeaveStatusEdit"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/hrm/leave-request/all/": {
            "get": {
                "operationId": "api_hrm_leave_request_all_list",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "HRM",
                    "Leave Request"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedLeaveStatusEditList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/hrm/leave-request/create/": {
            "post": {
                "operationId": "cerate_leave",
                "tags": [
                    "HRM",
                    "Leave Request"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Leave"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Leave"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Leave"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Leave"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/hrm/tasks/": {
            "get": {
                "operationId": "list_tasks",
                "description": "Lists all tasks.",
                "summary": "List tasks",
                "parameters": [
                    {
                        "in": "query",
                        "name": "assignees",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "description",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "end_time",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "start_time",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "title",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "HRM",
                    "Task"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedTaskList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "create_task",
                "description": "Creates a new task.",
                "summary": "Create task",
                "tags": [
                    "HRM",
                    "Task"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Task"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Task"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Task"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/hrm/tasks/{id}/": {
            "get": {
                "operationId": "retrieve_task",
                "description": "Retrieves a task by the task ID.",
                "summary": "Retrieve task",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "HRM",
                    "Task"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "update_task",
                "description": "Updates a task by the task ID.",
                "summary": "Update task",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "HRM",
                    "Task"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Task"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Task"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Task"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "partially_update_task",
                "description": "Partially updates a task by the task ID.",
                "summary": "Partially update task",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "HRM",
                    "Task"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTask"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTask"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedTask"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "delete_task",
                "description": "Deletes a task by the task ID.",
                "summary": "Delete task",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "HRM",
                    "Task"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/hrm/tasks/{id}/change-status/": {
            "put": {
                "operationId": "change_task_status",
                "description": "Changes the status of a task by the task ID.",
                "summary": "Change task status",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "HRM",
                    "Task"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChangeTaskStatus"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ChangeTaskStatus"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ChangeTaskStatus"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/hrm/tasks/me/": {
            "get": {
                "operationId": "list_my_tasks",
                "description": "Lists all tasks assigned to the currently logged in user.",
                "summary": "List my tasks",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "HRM",
                    "Task"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedTaskList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/hrm/time-entry/": {
            "get": {
                "operationId": "list_time_entries",
                "description": "Lists all time entries.",
                "summary": "List time entries",
                "parameters": [
                    {
                        "in": "query",
                        "name": "account",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "event_type",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "BREAK_END",
                                "BREAK_START",
                                "CLOCK_IN",
                                "CLOCK_OUT"
                            ]
                        },
                        "description": "* `CLOCK_IN` - Clock In\n* `CLOCK_OUT` - Clock Out\n* `BREAK_START` - Break Start\n* `BREAK_END` - Break End"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "timestamp",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "tags": [
                    "HRM",
                    "Time Entry"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedTimeEntryList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/hrm/time-entry/me/": {
            "get": {
                "operationId": "list_my_time_entries",
                "description": "Lists all time entries of the currently logged in user.",
                "summary": "List my time entries",
                "parameters": [
                    {
                        "in": "query",
                        "name": "event_type",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "BREAK_END",
                                "BREAK_START",
                                "CLOCK_IN",
                                "CLOCK_OUT"
                            ]
                        },
                        "description": "* `CLOCK_IN` - Clock In\n* `CLOCK_OUT` - Clock Out\n* `BREAK_START` - Break Start\n* `BREAK_END` - Break End"
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "timestamp",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "tags": [
                    "HRM",
                    "Time Entry"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedTimeEntryList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "log_time_entry",
                "description": "Logs a new time entry for the currently logged in user.",
                "summary": "Log time entry",
                "tags": [
                    "HRM",
                    "Time Entry"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TimeEntry"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TimeEntry"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TimeEntry"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TimeEntry"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/hrm/work-schedule/": {
            "get": {
                "operationId": "list_work_schedules",
                "description": "Lists all work schedules.",
                "summary": "List work schedules",
                "parameters": [
                    {
                        "in": "query",
                        "name": "account",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "day_of_week",
                        "schema": {
                            "type": "integer",
                            "enum": [
                                1,
                                2,
                                3,
                                4,
                                5,
                                6,
                                7
                            ]
                        },
                        "description": "* `1` - Monday\n* `2` - Tuesday\n* `3` - Wednesday\n* `4` - Thursday\n* `5` - Friday\n* `6` - Saturday\n* `7` - Sunday"
                    },
                    {
                        "in": "query",
                        "name": "end_time",
                        "schema": {
                            "type": "string",
                            "format": "time"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "start_time",
                        "schema": {
                            "type": "string",
                            "format": "time"
                        }
                    }
                ],
                "tags": [
                    "HRM",
                    "Work Schedule"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedWorkScheduleList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "create_work_schedule",
                "description": "Creates a new work schedule for a staff member.",
                "summary": "Create work schedule",
                "tags": [
                    "HRM",
                    "Work Schedule"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkSchedule"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkSchedule"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkSchedule"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkSchedule"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/hrm/work-schedule/{id}/": {
            "put": {
                "operationId": "update_work_schedule",
                "description": "Updates user's work schedule by the user's ID.",
                "summary": "Update work schedule",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "HRM",
                    "Work Schedule"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkScheduleUpdate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkScheduleUpdate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkScheduleUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkScheduleUpdate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "partially_update_work_schedule",
                "description": "Partially updates user's work schedule by the user's ID.",
                "summary": "Partially update work schedule",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "HRM",
                    "Work Schedule"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedWorkScheduleUpdate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedWorkScheduleUpdate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedWorkScheduleUpdate"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkScheduleUpdate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/hrm/work-schedule/me/": {
            "get": {
                "operationId": "list_my_work_schedule",
                "description": "Lists the work schedule of the currently logged in user.",
                "summary": "List my work schedule",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "tags": [
                    "HRM",
                    "Work Schedule"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedWorkScheduleList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/images/": {
            "get": {
                "operationId": "list_image",
                "description": "List all Images",
                "summary": "List all Images",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "title",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Image"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedImageList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "create_image",
                "description": "Create a new Image",
                "summary": "Create a new Image",
                "tags": [
                    "Image"
                ],
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Image"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Image"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Image"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/images/{id}/": {
            "get": {
                "operationId": "retrieve_image",
                "description": "Retrieve an Image",
                "summary": "Retrieve an Image",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Image"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Image"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "update_image",
                "description": "Update an Image",
                "summary": "Update an Image",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Image"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Image"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Image"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Image"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "api_images_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Image"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedImage"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedImage"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Image"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "delete_image",
                "description": "Delete an Image",
                "summary": "Delete an Image",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Image"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/inventory/batch/": {
            "get": {
                "operationId": "list_batches",
                "description": "Returns All Batches in Inventory",
                "summary": "List All Batches",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Inventory"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedBatchList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "create_batches",
                "description": "Create And Return New Batch For Inventory",
                "summary": "Create Inventory Batch",
                "tags": [
                    "Inventory"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Batch"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Batch"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Batch"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Batch"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/inventory/batch/{id}/": {
            "get": {
                "operationId": "get_batches",
                "description": "Get A Batch From All Batches",
                "summary": "Get A Batch",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Inventory"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Batch"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "api_inventory_batch_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Inventory"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Batch"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Batch"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Batch"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Batch"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "update_batches",
                "description": "Update Batch Information",
                "summary": "Update A Batch",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Inventory"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedBatch"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedBatch"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedBatch"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Batch"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "api_inventory_batch_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Inventory"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/inventory/batch/{id}/attribute/": {
            "put": {
                "operationId": "api_inventory_batch_attribute_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Inventory"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Attribute"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Attribute"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Attribute"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Attribute"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "api_inventory_batch_attribute_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Inventory"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAttribute"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAttribute"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedAttribute"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Attribute"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/inventory/batch/attribute/": {
            "post": {
                "operationId": "api_inventory_batch_attribute_create",
                "tags": [
                    "Inventory"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Attribute"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Attribute"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Attribute"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Attribute"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/inventory/product/": {
            "get": {
                "operationId": "list_products",
                "description": "Returns All Products in Inventory",
                "summary": "List All Inventory Product ",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Inventory"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedProductList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "create_product",
                "description": "Create And Return New Product For Inventory",
                "summary": "Create Inventory Product ",
                "tags": [
                    "Inventory"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Product"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Product"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Product"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/inventory/product-type/": {
            "get": {
                "operationId": "list_product_type",
                "description": "Returns All Product Types in Inventory",
                "summary": "List All Inventory Product Type ",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Inventory"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedProductTypeList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "create_product_type",
                "description": "Create And Return New Product Type For Inventory",
                "summary": "Create Inventory Product Type",
                "tags": [
                    "Inventory"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductType"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductType"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductType"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductType"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/inventory/product-type/{id}/": {
            "get": {
                "operationId": "get_product_type",
                "description": "Get A Product Type From All Product Type",
                "summary": "Get A Product Type",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Inventory"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductType"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "api_inventory_product_type_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Inventory"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductType"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductType"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductType"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductType"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "update_product_type",
                "description": "Update Product Type Information",
                "summary": "Update A Product Type",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Inventory"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProductType"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProductType"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProductType"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductType"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "api_inventory_product_type_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Inventory"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/inventory/product-type/{id}/batch-attribute/{attr_id}/": {
            "get": {
                "operationId": "api_inventory_product_type_batch_attribute_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "attr_id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Inventory"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            },
            "put": {
                "operationId": "api_inventory_product_type_batch_attribute_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "attr_id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Inventory"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            },
            "patch": {
                "operationId": "api_inventory_product_type_batch_attribute_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "attr_id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Inventory"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            },
            "delete": {
                "operationId": "api_inventory_product_type_batch_attribute_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "attr_id",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Inventory"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/inventory/product-type/batch-attribute/": {
            "post": {
                "operationId": "api_inventory_product_type_batch_attribute_create",
                "tags": [
                    "Inventory"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateBatchAttr"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateBatchAttr"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateBatchAttr"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateBatchAttr"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/inventory/product/{id}/": {
            "get": {
                "operationId": "get_product",
                "description": "Get A Product From All Products",
                "summary": "Get A Product",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Inventory"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "api_inventory_product_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Inventory"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Product"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Product"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Product"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "update_product",
                "description": "Update Product Information",
                "summary": "Update A Product",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Inventory"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProduct"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProduct"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedProduct"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "api_inventory_product_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Inventory"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/inventory/supplier/": {
            "get": {
                "operationId": "list_supplier",
                "description": "Returns All  Supplier",
                "summary": "List All Inventory Supplier ",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Inventory"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedSupplierList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "create_supplier",
                "description": "Create And Return New Supplier",
                "summary": "Create Inventory Supplier",
                "tags": [
                    "Inventory"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Supplier"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Supplier"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Supplier"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Supplier"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/inventory/supplier/{id}/": {
            "get": {
                "operationId": "get_supplier",
                "description": "Get A Supplier From All Suppliers",
                "summary": "Get A Supplier",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Inventory"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Supplier"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "api_inventory_supplier_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Inventory"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Supplier"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Supplier"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Supplier"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Supplier"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "update_supplier",
                "description": "Update Supplier Information",
                "summary": "Update A Supplier",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Inventory"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSupplier"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSupplier"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedSupplier"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Supplier"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "api_inventory_supplier_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Inventory"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Account": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "is_superuser": {
                        "type": "boolean",
                        "readOnly": true,
                        "title": "Superuser status",
                        "description": "Designates that this user has all permissions without explicitly assigning them."
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "readOnly": true,
                        "title": "Email Address"
                    },
                    "is_pro_user": {
                        "type": "boolean",
                        "readOnly": true,
                        "title": "Pro User Status"
                    },
                    "is_staff": {
                        "type": "boolean",
                        "readOnly": true,
                        "title": "Staff Status"
                    },
                    "is_active": {
                        "type": "boolean",
                        "readOnly": true,
                        "title": "Active Status"
                    },
                    "is_manager": {
                        "type": "boolean",
                        "readOnly": true,
                        "title": "Manager Status"
                    },
                    "date_joined": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "last_login": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "staff_profile": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StaffProfile"
                            }
                        ],
                        "readOnly": true
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Group"
                        },
                        "readOnly": true
                    },
                    "managers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Manager"
                        },
                        "readOnly": true
                    }
                },
                "required": [
                    "date_joined",
                    "email",
                    "groups",
                    "id",
                    "is_active",
                    "is_manager",
                    "is_pro_user",
                    "is_staff",
                    "is_superuser",
                    "last_login",
                    "managers",
                    "staff_profile"
                ]
            },
            "AdminExistsMessage": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "admin_exists": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "admin_exists",
                    "message"
                ]
            },
            "Attribute": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string",
                        "default": ""
                    },
                    "batch": {
                        "type": "integer",
                        "writeOnly": true
                    }
                },
                "required": [
                    "batch",
                    "id"
                ]
            },
            "AttributeSerializerClone": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "value"
                ]
            },
            "Batch": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "attributes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AttributeSerializerClone"
                        }
                    },
                    "batch_number": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "format": "int64"
                    },
                    "vendor": {
                        "type": "string"
                    },
                    "manufacturer": {
                        "type": "string"
                    },
                    "brand": {
                        "type": "string"
                    },
                    "delivery_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "purchase_price": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "format": "int64"
                    },
                    "list_price": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "format": "int64"
                    },
                    "list_unit": {
                        "type": "string"
                    },
                    "reduction_from_vendor": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "format": "int64"
                    },
                    "purchase_tax_percentage": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,2}(?:\\.\\d{0,2})?$"
                    },
                    "quantity": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "format": "int64"
                    },
                    "quantity_weight_unit": {
                        "$ref": "#/components/schemas/QuantityWeightUnitEnum"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "title": "Date Created"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "product": {
                        "type": "integer"
                    },
                    "supplier": {
                        "type": "integer"
                    }
                },
                "required": [
                    "attributes",
                    "batch_number",
                    "brand",
                    "created_at",
                    "delivery_date",
                    "id",
                    "list_price",
                    "list_unit",
                    "manufacturer",
                    "product",
                    "purchase_price",
                    "quantity_weight_unit",
                    "supplier",
                    "updated_at",
                    "vendor"
                ]
            },
            "BatchAttr": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "is_required": {
                        "type": "boolean",
                        "default": true
                    },
                    "default_value": {
                        "type": "string",
                        "default": ""
                    },
                    "data_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DataTypeEnum"
                            }
                        ],
                        "default": "text"
                    },
                    "choice_list": {
                        "type": "array",
                        "items": {},
                        "maxItems": 50
                    }
                },
                "required": [
                    "id",
                    "name"
                ]
            },
            "ChangePassword": {
                "type": "object",
                "properties": {
                    "old_password": {
                        "type": "string"
                    },
                    "new_password": {
                        "type": "string"
                    },
                    "new_password2": {
                        "type": "string"
                    }
                },
                "required": [
                    "new_password",
                    "new_password2",
                    "old_password"
                ]
            },
            "ChangeTaskStatus": {
                "type": "object",
                "properties": {
                    "status": {
                        "$ref": "#/components/schemas/Status3b2Enum"
                    }
                },
                "required": [
                    "status"
                ]
            },
            "CreateBatchAttr": {
                "type": "object",
                "properties": {
                    "batch_attribute": {
                        "$ref": "#/components/schemas/BatchAttr"
                    },
                    "product_type": {
                        "type": "integer"
                    }
                },
                "required": [
                    "batch_attribute",
                    "product_type"
                ]
            },
            "DataTypeEnum": {
                "enum": [
                    "number",
                    "select",
                    "multi-select",
                    "text"
                ],
                "type": "string",
                "description": "* `number` - number\n* `select` - select\n* `multi-select` - multi-select\n* `text` - text"
            },
            "DayOfWeekEnum": {
                "enum": [
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7
                ],
                "type": "integer",
                "description": "* `1` - Monday\n* `2` - Tuesday\n* `3` - Wednesday\n* `4` - Thursday\n* `5` - Friday\n* `6` - Saturday\n* `7` - Sunday"
            },
            "DepartmentEnum": {
                "enum": [
                    "SALES",
                    "PRODUCTION"
                ],
                "type": "string",
                "description": "* `SALES` - Sales\n* `PRODUCTION` - Production"
            },
            "Email": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email"
                    }
                },
                "required": [
                    "email"
                ]
            },
            "EventTypeEnum": {
                "enum": [
                    "CLOCK_IN",
                    "CLOCK_OUT",
                    "BREAK_START",
                    "BREAK_END"
                ],
                "type": "string",
                "description": "* `CLOCK_IN` - Clock In\n* `CLOCK_OUT` - Clock Out\n* `BREAK_START` - Break Start\n* `BREAK_END` - Break End"
            },
            "Group": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 150
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "required": [
                    "id",
                    "name",
                    "permissions"
                ]
            },
            "Image": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "image": {
                        "type": "string",
                        "format": "uri"
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "title_en": {
                        "type": "string",
                        "nullable": true,
                        "title": "Title [en]",
                        "maxLength": 200
                    },
                    "title_nl": {
                        "type": "string",
                        "nullable": true,
                        "title": "Title [nl]",
                        "maxLength": 200
                    },
                    "title_fr": {
                        "type": "string",
                        "nullable": true,
                        "title": "Title [fr]",
                        "maxLength": 200
                    },
                    "image_type": {
                        "$ref": "#/components/schemas/ImageTypeEnum"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "owner": {
                        "type": "integer",
                        "nullable": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "image",
                    "title",
                    "updated_at"
                ]
            },
            "ImageTypeEnum": {
                "enum": [
                    "public",
                    "private"
                ],
                "type": "string",
                "description": "* `public` - public\n* `private` - private"
            },
            "InviteStaff": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "is_superuser": {
                        "type": "boolean",
                        "readOnly": true,
                        "title": "Superuser status",
                        "description": "Designates that this user has all permissions without explicitly assigning them."
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email Address",
                        "maxLength": 254
                    },
                    "is_pro_user": {
                        "type": "boolean",
                        "readOnly": true,
                        "title": "Pro User Status"
                    },
                    "is_staff": {
                        "type": "boolean",
                        "readOnly": true,
                        "title": "Staff Status"
                    },
                    "is_active": {
                        "type": "boolean",
                        "readOnly": true,
                        "title": "Active Status"
                    },
                    "is_manager": {
                        "type": "boolean",
                        "title": "Manager Status"
                    },
                    "date_joined": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "last_login": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "staff_profile": {
                        "type": "integer",
                        "readOnly": true,
                        "nullable": true
                    },
                    "password2": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "managers": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "required": [
                    "date_joined",
                    "email",
                    "groups",
                    "id",
                    "is_active",
                    "is_pro_user",
                    "is_staff",
                    "is_superuser",
                    "last_login",
                    "password",
                    "password2",
                    "staff_profile"
                ]
            },
            "Leave": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "reason": {
                        "type": "string"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Status86bEnum"
                            }
                        ],
                        "readOnly": true
                    },
                    "start_date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "end_date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "staff": {
                        "type": "integer",
                        "title": "Account"
                    },
                    "reviewed_by": {
                        "type": "integer",
                        "readOnly": true,
                        "nullable": true,
                        "title": "Account"
                    }
                },
                "required": [
                    "created_at",
                    "end_date",
                    "id",
                    "reason",
                    "reviewed_by",
                    "start_date",
                    "status",
                    "title",
                    "updated_at"
                ]
            },
            "LeaveStatusEdit": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "reason": {
                        "type": "string"
                    },
                    "status": {
                        "$ref": "#/components/schemas/Status86bEnum"
                    },
                    "start_date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "end_date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "staff": {
                        "type": "integer",
                        "readOnly": true,
                        "title": "Account"
                    },
                    "reviewed_by": {
                        "type": "integer",
                        "nullable": true,
                        "title": "Account"
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "staff",
                    "updated_at"
                ]
            },
            "Manager": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email Address",
                        "maxLength": 254
                    },
                    "is_staff": {
                        "type": "boolean",
                        "title": "Staff Status"
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Active Status"
                    },
                    "is_superuser": {
                        "type": "boolean",
                        "title": "Superuser status",
                        "description": "Designates that this user has all permissions without explicitly assigning them."
                    },
                    "is_pro_user": {
                        "type": "boolean",
                        "title": "Pro User Status"
                    },
                    "staff_profile": {
                        "type": "integer",
                        "nullable": true
                    }
                },
                "required": [
                    "email",
                    "id"
                ]
            },
            "Message": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "maxLength": 100
                    }
                },
                "required": [
                    "message"
                ]
            },
            "MyPermissions": {
                "type": "object",
                "properties": {
                    "permissions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "readOnly": true
                    }
                },
                "required": [
                    "permissions"
                ]
            },
            "PaginatedAccountList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Account"
                        }
                    }
                }
            },
            "PaginatedBatchList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Batch"
                        }
                    }
                }
            },
            "PaginatedGroupList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Group"
                        }
                    }
                }
            },
            "PaginatedImageList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Image"
                        }
                    }
                }
            },
            "PaginatedLeaveStatusEditList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LeaveStatusEdit"
                        }
                    }
                }
            },
            "PaginatedPermissionList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Permission"
                        }
                    }
                }
            },
            "PaginatedPostList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Post"
                        }
                    }
                }
            },
            "PaginatedProductList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Product"
                        }
                    }
                }
            },
            "PaginatedProductTypeList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductType"
                        }
                    }
                }
            },
            "PaginatedSupplierList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Supplier"
                        }
                    }
                }
            },
            "PaginatedTaskList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Task"
                        }
                    }
                }
            },
            "PaginatedTimeEntryList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TimeEntry"
                        }
                    }
                }
            },
            "PaginatedWorkScheduleList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WorkSchedule"
                        }
                    }
                }
            },
            "PasswordToken": {
                "type": "object",
                "properties": {
                    "password": {
                        "type": "string"
                    },
                    "token": {
                        "type": "string"
                    }
                },
                "required": [
                    "password",
                    "token"
                ]
            },
            "PatchedAttribute": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string",
                        "default": ""
                    },
                    "batch": {
                        "type": "integer",
                        "writeOnly": true
                    }
                }
            },
            "PatchedBatch": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "attributes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AttributeSerializerClone"
                        }
                    },
                    "batch_number": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "format": "int64"
                    },
                    "vendor": {
                        "type": "string"
                    },
                    "manufacturer": {
                        "type": "string"
                    },
                    "brand": {
                        "type": "string"
                    },
                    "delivery_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "purchase_price": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "format": "int64"
                    },
                    "list_price": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "format": "int64"
                    },
                    "list_unit": {
                        "type": "string"
                    },
                    "reduction_from_vendor": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "format": "int64"
                    },
                    "purchase_tax_percentage": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,2}(?:\\.\\d{0,2})?$"
                    },
                    "quantity": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "format": "int64"
                    },
                    "quantity_weight_unit": {
                        "$ref": "#/components/schemas/QuantityWeightUnitEnum"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "title": "Date Created"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "product": {
                        "type": "integer"
                    },
                    "supplier": {
                        "type": "integer"
                    }
                }
            },
            "PatchedGroup": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 150
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }
            },
            "PatchedImage": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "image": {
                        "type": "string",
                        "format": "uri"
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "title_en": {
                        "type": "string",
                        "nullable": true,
                        "title": "Title [en]",
                        "maxLength": 200
                    },
                    "title_nl": {
                        "type": "string",
                        "nullable": true,
                        "title": "Title [nl]",
                        "maxLength": 200
                    },
                    "title_fr": {
                        "type": "string",
                        "nullable": true,
                        "title": "Title [fr]",
                        "maxLength": 200
                    },
                    "image_type": {
                        "$ref": "#/components/schemas/ImageTypeEnum"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "owner": {
                        "type": "integer",
                        "nullable": true
                    }
                }
            },
            "PatchedLeaveStatusEdit": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "reason": {
                        "type": "string"
                    },
                    "status": {
                        "$ref": "#/components/schemas/Status86bEnum"
                    },
                    "start_date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "end_date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "staff": {
                        "type": "integer",
                        "readOnly": true,
                        "title": "Account"
                    },
                    "reviewed_by": {
                        "type": "integer",
                        "nullable": true,
                        "title": "Account"
                    }
                }
            },
            "PatchedPost": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 120
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true,
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    },
                    "author": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Account"
                            }
                        ],
                        "readOnly": true
                    },
                    "featured_image": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Image"
                            }
                        ],
                        "readOnly": true
                    },
                    "excerpt": {
                        "type": "string"
                    },
                    "content": {
                        "type": "string"
                    },
                    "published": {
                        "type": "boolean"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "featured_image_id": {
                        "type": "integer"
                    }
                }
            },
            "PatchedProduct": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "name_en": {
                        "type": "string",
                        "nullable": true,
                        "title": "Name [en]",
                        "maxLength": 200
                    },
                    "name_nl": {
                        "type": "string",
                        "nullable": true,
                        "title": "Name [nl]",
                        "maxLength": 200
                    },
                    "name_fr": {
                        "type": "string",
                        "nullable": true,
                        "title": "Name [fr]",
                        "maxLength": 200
                    },
                    "slug": {
                        "type": "string",
                        "maxLength": 500,
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    },
                    "sku": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "short_customer_facing_description": {
                        "type": "string"
                    },
                    "short_customer_facing_description_en": {
                        "type": "string",
                        "nullable": true,
                        "title": "Short Customer Facing Description [en]"
                    },
                    "short_customer_facing_description_nl": {
                        "type": "string",
                        "nullable": true,
                        "title": "Short Customer Facing Description [nl]"
                    },
                    "short_customer_facing_description_fr": {
                        "type": "string",
                        "nullable": true,
                        "title": "Short Customer Facing Description [fr]"
                    },
                    "long_customer_facing_description": {
                        "type": "string"
                    },
                    "long_customer_facing_description_en": {
                        "type": "string",
                        "nullable": true,
                        "title": "Long Customer Facing Description [en]"
                    },
                    "long_customer_facing_description_nl": {
                        "type": "string",
                        "nullable": true,
                        "title": "Long Customer Facing Description [nl]"
                    },
                    "long_customer_facing_description_fr": {
                        "type": "string",
                        "nullable": true,
                        "title": "Long Customer Facing Description [fr]"
                    },
                    "short_internal_use_description": {
                        "type": "string"
                    },
                    "short_internal_use_description_en": {
                        "type": "string",
                        "nullable": true,
                        "title": "Short Internal Use Description [en]"
                    },
                    "short_internal_use_description_nl": {
                        "type": "string",
                        "nullable": true,
                        "title": "Short Internal Use Description [nl]"
                    },
                    "short_internal_use_description_fr": {
                        "type": "string",
                        "nullable": true,
                        "title": "Short Internal Use Description [fr]"
                    },
                    "long_internal_use_description": {
                        "type": "string"
                    },
                    "long_internal_use_description_en": {
                        "type": "string",
                        "nullable": true,
                        "title": "Long Internal Use Description [en]"
                    },
                    "long_internal_use_description_nl": {
                        "type": "string",
                        "nullable": true,
                        "title": "Long Internal Use Description [nl]"
                    },
                    "long_internal_use_description_fr": {
                        "type": "string",
                        "nullable": true,
                        "title": "Long Internal Use Description [fr]"
                    },
                    "ingredients": {
                        "type": "string"
                    },
                    "ingredients_en": {
                        "type": "string",
                        "nullable": true,
                        "title": "Ingredients [en]"
                    },
                    "ingredients_nl": {
                        "type": "string",
                        "nullable": true,
                        "title": "Ingredients [nl]"
                    },
                    "ingredients_fr": {
                        "type": "string",
                        "nullable": true,
                        "title": "Ingredients [fr]"
                    },
                    "allergens": {
                        "type": "string"
                    },
                    "allergens_en": {
                        "type": "string",
                        "nullable": true,
                        "title": "Allergens [en]"
                    },
                    "allergens_nl": {
                        "type": "string",
                        "nullable": true,
                        "title": "Allergens [nl]"
                    },
                    "allergens_fr": {
                        "type": "string",
                        "nullable": true,
                        "title": "Allergens [fr]"
                    },
                    "storage_requirement": {
                        "type": "string"
                    },
                    "storage_requirement_en": {
                        "type": "string",
                        "nullable": true,
                        "title": "Storage Requirement [en]"
                    },
                    "storage_requirement_nl": {
                        "type": "string",
                        "nullable": true,
                        "title": "Storage Requirement [nl]"
                    },
                    "storage_requirement_fr": {
                        "type": "string",
                        "nullable": true,
                        "title": "Storage Requirement [fr]"
                    },
                    "nutritional_information": {
                        "type": "string"
                    },
                    "nutritional_information_en": {
                        "type": "string",
                        "nullable": true,
                        "title": "Nutritional Information [en]"
                    },
                    "nutritional_information_nl": {
                        "type": "string",
                        "nullable": true,
                        "title": "Nutritional Information [nl]"
                    },
                    "nutritional_information_fr": {
                        "type": "string",
                        "nullable": true,
                        "title": "Nutritional Information [fr]"
                    },
                    "nutritional_claims": {
                        "type": "string"
                    },
                    "nutritional_claims_en": {
                        "type": "string",
                        "nullable": true,
                        "title": "Nutritional Claims [en]"
                    },
                    "nutritional_claims_nl": {
                        "type": "string",
                        "nullable": true,
                        "title": "Nutritional Claims [nl]"
                    },
                    "nutritional_claims_fr": {
                        "type": "string",
                        "nullable": true,
                        "title": "Nutritional Claims [fr]"
                    },
                    "health_claims": {
                        "type": "string"
                    },
                    "health_claims_en": {
                        "type": "string",
                        "nullable": true,
                        "title": "Health Claims [en]"
                    },
                    "health_claims_nl": {
                        "type": "string",
                        "nullable": true,
                        "title": "Health Claims [nl]"
                    },
                    "health_claims_fr": {
                        "type": "string",
                        "nullable": true,
                        "title": "Health Claims [fr]"
                    },
                    "selling_tax_percentage": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,2}(?:\\.\\d{0,2})?$"
                    },
                    "shop_selling_price_vat_incl_b2b": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "format": "int64"
                    },
                    "shop_selling_price_vat_incl_b2c": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "format": "int64"
                    },
                    "ecommerce_selling_price_vat_excl_b2b": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "format": "int64",
                        "title": "E-commerce Selling Price Vat Excl B2b"
                    },
                    "ecommerce_selling_price_vat_excl_b2c": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "format": "int64",
                        "title": "E-commerce Selling Price Vat Excl B2c"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "title": "Date Created"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "featured_img": {
                        "type": "integer",
                        "nullable": true
                    },
                    "preferred_vendor": {
                        "type": "integer",
                        "nullable": true
                    },
                    "product_type": {
                        "type": "integer"
                    },
                    "images": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }
            },
            "PatchedProductType": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "batch_attributes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BatchAttr"
                        }
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 300
                    },
                    "is_enabled": {
                        "type": "boolean"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "title": "Date Created"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "PatchedStaffProfile": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "profile_picture": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Image"
                            }
                        ],
                        "readOnly": true
                    },
                    "profile_picture_id": {
                        "type": "integer",
                        "writeOnly": true
                    },
                    "first_name": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "last_name": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "preferred_name": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "preferred_weekly_working_hours": {
                        "type": "integer",
                        "maximum": 32767,
                        "minimum": 0
                    },
                    "phone_number": {
                        "type": "string",
                        "maxLength": 15
                    },
                    "address": {
                        "type": "string"
                    },
                    "date_of_birth": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "emergency_contact_name": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "emergency_contact_number": {
                        "type": "string",
                        "maxLength": 15
                    },
                    "emergency_contact_relationship": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "PatchedSupplier": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "company_name": {
                        "type": "string"
                    },
                    "contact_person": {
                        "type": "string",
                        "nullable": true
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "maxLength": 254
                    },
                    "phone": {
                        "type": "string",
                        "nullable": true
                    },
                    "address": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "title": "Date Created"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "logo": {
                        "type": "integer",
                        "nullable": true
                    }
                }
            },
            "PatchedTask": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string"
                    },
                    "status": {
                        "$ref": "#/components/schemas/Status3b2Enum"
                    },
                    "priority": {
                        "$ref": "#/components/schemas/PriorityEnum"
                    },
                    "start_time": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "end_time": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "assignees_ids": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "writeOnly": true
                        },
                        "writeOnly": true
                    },
                    "assignees": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Account"
                        },
                        "readOnly": true
                    }
                }
            },
            "PatchedUpdateAccount": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "is_superuser": {
                        "type": "boolean",
                        "readOnly": true,
                        "title": "Superuser status",
                        "description": "Designates that this user has all permissions without explicitly assigning them."
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email Address",
                        "maxLength": 254
                    },
                    "is_pro_user": {
                        "type": "boolean",
                        "title": "Pro User Status"
                    },
                    "is_staff": {
                        "type": "boolean",
                        "title": "Staff Status"
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Active Status"
                    },
                    "is_manager": {
                        "type": "boolean",
                        "title": "Manager Status"
                    },
                    "date_joined": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "last_login": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "staff_profile": {
                        "type": "integer",
                        "readOnly": true,
                        "nullable": true
                    },
                    "manager_ids": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "managers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Manager"
                        },
                        "readOnly": true
                    }
                }
            },
            "PatchedWorkScheduleUpdate": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "day_of_week": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DayOfWeekEnum"
                            }
                        ],
                        "minimum": -2147483648,
                        "maximum": 2147483647
                    },
                    "department": {
                        "$ref": "#/components/schemas/DepartmentEnum"
                    },
                    "start_time": {
                        "type": "string",
                        "format": "time"
                    },
                    "end_time": {
                        "type": "string",
                        "format": "time"
                    },
                    "account_id": {
                        "type": "integer",
                        "readOnly": true
                    }
                }
            },
            "Permission": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "codename": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "content_type": {
                        "type": "integer"
                    }
                },
                "required": [
                    "codename",
                    "content_type",
                    "id",
                    "name"
                ]
            },
            "Post": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 120
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true,
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    },
                    "author": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Account"
                            }
                        ],
                        "readOnly": true
                    },
                    "featured_image": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Image"
                            }
                        ],
                        "readOnly": true
                    },
                    "excerpt": {
                        "type": "string"
                    },
                    "content": {
                        "type": "string"
                    },
                    "published": {
                        "type": "boolean"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "featured_image_id": {
                        "type": "integer"
                    }
                },
                "required": [
                    "author",
                    "content",
                    "created_at",
                    "excerpt",
                    "featured_image",
                    "featured_image_id",
                    "id",
                    "slug",
                    "title",
                    "updated_at"
                ]
            },
            "PriorityEnum": {
                "enum": [
                    "LOW",
                    "NORMAL",
                    "HIGH"
                ],
                "type": "string",
                "description": "* `LOW` - Low\n* `NORMAL` - Normal\n* `HIGH` - High"
            },
            "Product": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "name_en": {
                        "type": "string",
                        "nullable": true,
                        "title": "Name [en]",
                        "maxLength": 200
                    },
                    "name_nl": {
                        "type": "string",
                        "nullable": true,
                        "title": "Name [nl]",
                        "maxLength": 200
                    },
                    "name_fr": {
                        "type": "string",
                        "nullable": true,
                        "title": "Name [fr]",
                        "maxLength": 200
                    },
                    "slug": {
                        "type": "string",
                        "maxLength": 500,
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    },
                    "sku": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "short_customer_facing_description": {
                        "type": "string"
                    },
                    "short_customer_facing_description_en": {
                        "type": "string",
                        "nullable": true,
                        "title": "Short Customer Facing Description [en]"
                    },
                    "short_customer_facing_description_nl": {
                        "type": "string",
                        "nullable": true,
                        "title": "Short Customer Facing Description [nl]"
                    },
                    "short_customer_facing_description_fr": {
                        "type": "string",
                        "nullable": true,
                        "title": "Short Customer Facing Description [fr]"
                    },
                    "long_customer_facing_description": {
                        "type": "string"
                    },
                    "long_customer_facing_description_en": {
                        "type": "string",
                        "nullable": true,
                        "title": "Long Customer Facing Description [en]"
                    },
                    "long_customer_facing_description_nl": {
                        "type": "string",
                        "nullable": true,
                        "title": "Long Customer Facing Description [nl]"
                    },
                    "long_customer_facing_description_fr": {
                        "type": "string",
                        "nullable": true,
                        "title": "Long Customer Facing Description [fr]"
                    },
                    "short_internal_use_description": {
                        "type": "string"
                    },
                    "short_internal_use_description_en": {
                        "type": "string",
                        "nullable": true,
                        "title": "Short Internal Use Description [en]"
                    },
                    "short_internal_use_description_nl": {
                        "type": "string",
                        "nullable": true,
                        "title": "Short Internal Use Description [nl]"
                    },
                    "short_internal_use_description_fr": {
                        "type": "string",
                        "nullable": true,
                        "title": "Short Internal Use Description [fr]"
                    },
                    "long_internal_use_description": {
                        "type": "string"
                    },
                    "long_internal_use_description_en": {
                        "type": "string",
                        "nullable": true,
                        "title": "Long Internal Use Description [en]"
                    },
                    "long_internal_use_description_nl": {
                        "type": "string",
                        "nullable": true,
                        "title": "Long Internal Use Description [nl]"
                    },
                    "long_internal_use_description_fr": {
                        "type": "string",
                        "nullable": true,
                        "title": "Long Internal Use Description [fr]"
                    },
                    "ingredients": {
                        "type": "string"
                    },
                    "ingredients_en": {
                        "type": "string",
                        "nullable": true,
                        "title": "Ingredients [en]"
                    },
                    "ingredients_nl": {
                        "type": "string",
                        "nullable": true,
                        "title": "Ingredients [nl]"
                    },
                    "ingredients_fr": {
                        "type": "string",
                        "nullable": true,
                        "title": "Ingredients [fr]"
                    },
                    "allergens": {
                        "type": "string"
                    },
                    "allergens_en": {
                        "type": "string",
                        "nullable": true,
                        "title": "Allergens [en]"
                    },
                    "allergens_nl": {
                        "type": "string",
                        "nullable": true,
                        "title": "Allergens [nl]"
                    },
                    "allergens_fr": {
                        "type": "string",
                        "nullable": true,
                        "title": "Allergens [fr]"
                    },
                    "storage_requirement": {
                        "type": "string"
                    },
                    "storage_requirement_en": {
                        "type": "string",
                        "nullable": true,
                        "title": "Storage Requirement [en]"
                    },
                    "storage_requirement_nl": {
                        "type": "string",
                        "nullable": true,
                        "title": "Storage Requirement [nl]"
                    },
                    "storage_requirement_fr": {
                        "type": "string",
                        "nullable": true,
                        "title": "Storage Requirement [fr]"
                    },
                    "nutritional_information": {
                        "type": "string"
                    },
                    "nutritional_information_en": {
                        "type": "string",
                        "nullable": true,
                        "title": "Nutritional Information [en]"
                    },
                    "nutritional_information_nl": {
                        "type": "string",
                        "nullable": true,
                        "title": "Nutritional Information [nl]"
                    },
                    "nutritional_information_fr": {
                        "type": "string",
                        "nullable": true,
                        "title": "Nutritional Information [fr]"
                    },
                    "nutritional_claims": {
                        "type": "string"
                    },
                    "nutritional_claims_en": {
                        "type": "string",
                        "nullable": true,
                        "title": "Nutritional Claims [en]"
                    },
                    "nutritional_claims_nl": {
                        "type": "string",
                        "nullable": true,
                        "title": "Nutritional Claims [nl]"
                    },
                    "nutritional_claims_fr": {
                        "type": "string",
                        "nullable": true,
                        "title": "Nutritional Claims [fr]"
                    },
                    "health_claims": {
                        "type": "string"
                    },
                    "health_claims_en": {
                        "type": "string",
                        "nullable": true,
                        "title": "Health Claims [en]"
                    },
                    "health_claims_nl": {
                        "type": "string",
                        "nullable": true,
                        "title": "Health Claims [nl]"
                    },
                    "health_claims_fr": {
                        "type": "string",
                        "nullable": true,
                        "title": "Health Claims [fr]"
                    },
                    "selling_tax_percentage": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,2}(?:\\.\\d{0,2})?$"
                    },
                    "shop_selling_price_vat_incl_b2b": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "format": "int64"
                    },
                    "shop_selling_price_vat_incl_b2c": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "format": "int64"
                    },
                    "ecommerce_selling_price_vat_excl_b2b": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "format": "int64",
                        "title": "E-commerce Selling Price Vat Excl B2b"
                    },
                    "ecommerce_selling_price_vat_excl_b2c": {
                        "type": "integer",
                        "maximum": 9223372036854775807,
                        "minimum": 0,
                        "format": "int64",
                        "title": "E-commerce Selling Price Vat Excl B2c"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "title": "Date Created"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "featured_img": {
                        "type": "integer",
                        "nullable": true
                    },
                    "preferred_vendor": {
                        "type": "integer",
                        "nullable": true
                    },
                    "product_type": {
                        "type": "integer"
                    },
                    "images": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "required": [
                    "allergens",
                    "created_at",
                    "ecommerce_selling_price_vat_excl_b2b",
                    "ecommerce_selling_price_vat_excl_b2c",
                    "featured_img",
                    "health_claims",
                    "id",
                    "ingredients",
                    "long_customer_facing_description",
                    "long_internal_use_description",
                    "name",
                    "nutritional_claims",
                    "nutritional_information",
                    "product_type",
                    "selling_tax_percentage",
                    "shop_selling_price_vat_incl_b2b",
                    "shop_selling_price_vat_incl_b2c",
                    "short_customer_facing_description",
                    "short_internal_use_description",
                    "sku",
                    "storage_requirement",
                    "updated_at"
                ]
            },
            "ProductType": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "batch_attributes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BatchAttr"
                        }
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 300
                    },
                    "is_enabled": {
                        "type": "boolean"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "title": "Date Created"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "batch_attributes",
                    "created_at",
                    "id",
                    "name",
                    "updated_at"
                ]
            },
            "QuantityWeightUnitEnum": {
                "enum": [
                    "kg",
                    "tons",
                    "ounces",
                    "pounds"
                ],
                "type": "string",
                "description": "* `kg` - kilogram\n* `tons` - tons\n* `ounces` - ounces\n* `pounds` - pounds"
            },
            "RegisterAccount": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "is_superuser": {
                        "type": "boolean",
                        "readOnly": true,
                        "title": "Superuser status",
                        "description": "Designates that this user has all permissions without explicitly assigning them."
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email Address",
                        "maxLength": 254
                    },
                    "is_pro_user": {
                        "type": "boolean",
                        "readOnly": true,
                        "title": "Pro User Status"
                    },
                    "is_staff": {
                        "type": "boolean",
                        "readOnly": true,
                        "title": "Staff Status"
                    },
                    "is_active": {
                        "type": "boolean",
                        "readOnly": true,
                        "title": "Active Status"
                    },
                    "is_manager": {
                        "type": "boolean",
                        "readOnly": true,
                        "title": "Manager Status"
                    },
                    "date_joined": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "last_login": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "staff_profile": {
                        "type": "integer",
                        "readOnly": true,
                        "nullable": true
                    },
                    "password2": {
                        "type": "string",
                        "writeOnly": true
                    }
                },
                "required": [
                    "date_joined",
                    "email",
                    "id",
                    "is_active",
                    "is_manager",
                    "is_pro_user",
                    "is_staff",
                    "is_superuser",
                    "last_login",
                    "password",
                    "password2",
                    "staff_profile"
                ]
            },
            "ResetToken": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string"
                    }
                },
                "required": [
                    "token"
                ]
            },
            "StaffProfile": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "profile_picture": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Image"
                            }
                        ],
                        "readOnly": true
                    },
                    "profile_picture_id": {
                        "type": "integer",
                        "writeOnly": true
                    },
                    "first_name": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "last_name": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "preferred_name": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "preferred_weekly_working_hours": {
                        "type": "integer",
                        "maximum": 32767,
                        "minimum": 0
                    },
                    "phone_number": {
                        "type": "string",
                        "maxLength": 15
                    },
                    "address": {
                        "type": "string"
                    },
                    "date_of_birth": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "emergency_contact_name": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "emergency_contact_number": {
                        "type": "string",
                        "maxLength": 15
                    },
                    "emergency_contact_relationship": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "first_name",
                    "id",
                    "last_name",
                    "profile_picture",
                    "updated_at"
                ]
            },
            "Status": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "maxLength": 100
                    }
                },
                "required": [
                    "status"
                ]
            },
            "Status3b2Enum": {
                "enum": [
                    "PENDING",
                    "IN_PROGRESS",
                    "COMPLETED"
                ],
                "type": "string",
                "description": "* `PENDING` - Pending\n* `IN_PROGRESS` - In Progress\n* `COMPLETED` - Completed"
            },
            "Status86bEnum": {
                "enum": [
                    "pending",
                    "approved",
                    "declined",
                    "cancelled"
                ],
                "type": "string",
                "description": "* `pending` - Pending\n* `approved` - Approved\n* `declined` - Declined\n* `cancelled` - Cancel"
            },
            "Supplier": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "company_name": {
                        "type": "string"
                    },
                    "contact_person": {
                        "type": "string",
                        "nullable": true
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "maxLength": 254
                    },
                    "phone": {
                        "type": "string",
                        "nullable": true
                    },
                    "address": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "title": "Date Created"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "logo": {
                        "type": "integer",
                        "nullable": true
                    }
                },
                "required": [
                    "address",
                    "company_name",
                    "created_at",
                    "email",
                    "id",
                    "updated_at"
                ]
            },
            "Task": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string"
                    },
                    "status": {
                        "$ref": "#/components/schemas/Status3b2Enum"
                    },
                    "priority": {
                        "$ref": "#/components/schemas/PriorityEnum"
                    },
                    "start_time": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "end_time": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "assignees_ids": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "writeOnly": true
                        },
                        "writeOnly": true
                    },
                    "assignees": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Account"
                        },
                        "readOnly": true
                    }
                },
                "required": [
                    "assignees",
                    "assignees_ids",
                    "created_at",
                    "id",
                    "title",
                    "updated_at"
                ]
            },
            "TimeEntry": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "account": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "event_type": {
                        "$ref": "#/components/schemas/EventTypeEnum"
                    }
                },
                "required": [
                    "account",
                    "event_type",
                    "id",
                    "timestamp"
                ]
            },
            "TokenObtainPair": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "access": {
                        "type": "string",
                        "readOnly": true
                    },
                    "refresh": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "access",
                    "email",
                    "password",
                    "refresh"
                ]
            },
            "TokenObtainPairResponse": {
                "type": "object",
                "properties": {
                    "access": {
                        "type": "string"
                    },
                    "refresh": {
                        "type": "string"
                    }
                },
                "required": [
                    "access",
                    "refresh"
                ]
            },
            "TokenRefresh": {
                "type": "object",
                "properties": {
                    "access": {
                        "type": "string",
                        "readOnly": true
                    },
                    "refresh": {
                        "type": "string"
                    }
                },
                "required": [
                    "access",
                    "refresh"
                ]
            },
            "TokenRefreshResponse": {
                "type": "object",
                "properties": {
                    "access": {
                        "type": "string"
                    },
                    "refresh": {
                        "type": "string"
                    }
                },
                "required": [
                    "access",
                    "refresh"
                ]
            },
            "TokenVerify": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string",
                        "writeOnly": true
                    }
                },
                "required": [
                    "token"
                ]
            },
            "UpdateAccount": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "is_superuser": {
                        "type": "boolean",
                        "readOnly": true,
                        "title": "Superuser status",
                        "description": "Designates that this user has all permissions without explicitly assigning them."
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email Address",
                        "maxLength": 254
                    },
                    "is_pro_user": {
                        "type": "boolean",
                        "title": "Pro User Status"
                    },
                    "is_staff": {
                        "type": "boolean",
                        "title": "Staff Status"
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Active Status"
                    },
                    "is_manager": {
                        "type": "boolean",
                        "title": "Manager Status"
                    },
                    "date_joined": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "last_login": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "staff_profile": {
                        "type": "integer",
                        "readOnly": true,
                        "nullable": true
                    },
                    "manager_ids": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "managers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Manager"
                        },
                        "readOnly": true
                    }
                },
                "required": [
                    "date_joined",
                    "email",
                    "id",
                    "is_superuser",
                    "last_login",
                    "managers",
                    "staff_profile"
                ]
            },
            "WorkSchedule": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "day_of_week": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DayOfWeekEnum"
                            }
                        ],
                        "minimum": -2147483648,
                        "maximum": 2147483647
                    },
                    "department": {
                        "$ref": "#/components/schemas/DepartmentEnum"
                    },
                    "start_time": {
                        "type": "string",
                        "format": "time"
                    },
                    "end_time": {
                        "type": "string",
                        "format": "time"
                    },
                    "account_id": {
                        "type": "integer"
                    }
                },
                "required": [
                    "account_id",
                    "day_of_week",
                    "department",
                    "end_time",
                    "id",
                    "start_time"
                ]
            },
            "WorkScheduleUpdate": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "day_of_week": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DayOfWeekEnum"
                            }
                        ],
                        "minimum": -2147483648,
                        "maximum": 2147483647
                    },
                    "department": {
                        "$ref": "#/components/schemas/DepartmentEnum"
                    },
                    "start_time": {
                        "type": "string",
                        "format": "time"
                    },
                    "end_time": {
                        "type": "string",
                        "format": "time"
                    },
                    "account_id": {
                        "type": "integer",
                        "readOnly": true
                    }
                },
                "required": [
                    "account_id",
                    "day_of_week",
                    "department",
                    "end_time",
                    "id",
                    "start_time"
                ]
            }
        },
        "securitySchemes": {
            "jwtAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    }
}